// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { CardSelectorExpression } from "./CardSelectorExpression";
import type { CardSet } from "./CardSet";
import type { ConditionalStatement } from "./ConditionalStatement";
import type { PlayerCollectionExpression } from "./PlayerCollectionExpression";
import type { ZoneCollectionExpression } from "./ZoneCollectionExpression";
import type { ZoneExpression } from "./ZoneExpression";

export type Statement = "Empty" | { "Block": Array<Statement> } | { "Conditional": ConditionalStatement } | { "Broadcast": { msg: string, to: PlayerCollectionExpression, } } | { "CreateCards": { zone: ZoneExpression, cards: CardSet, } } | { "Deal": { from: ZoneExpression, to: ZoneCollectionExpression, count: bigint, } } | { "Move": { from: ZoneExpression, to: ZoneExpression, selector: CardSelectorExpression, } };
